name: Prado
on: [push, pull_request]
jobs:
  prado:
    name: Prado
    runs-on: ubuntu-latest
    services:
      memcached:
        image: memcached
        ports:
          - 11211:11211
      postgres:
        image: postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.3', '7.4', '8.0']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
#      - name: Setup PHP, with composer and extensions
#        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
#        with:
#          php-version: ${{ matrix.php-versions }}
#          extensions: mbstring, intl, gd, imagick, zip, dom, mysql
      - name: Validate composer.json and composer.lock
        run: composer validate --strict

#      - name: Cache Composer packages
#        id: composer-cache
#        uses: actions/cache@v2
#        with:
#          path: vendor
#          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
#        restore-keys: |
#            ${{ runner.os }}-php-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Setup mysql service
        run: |
          sudo systemctl start mysql.service
          mysql -uroot -proot < ./tests/initdb_mysql.sql

      - name: Setup postgres service
        run: |
          createdb -h 127.0.0.1 -U postgres prado_unitest
          psql -h 127.0.0.1 -U postgres -a -w prado_unitest -f ./tests/initdb_pgsql.sql
        env:
          PGPASSWORD: postgres
      - name: Run Tests
        run: |
          composer unittest
